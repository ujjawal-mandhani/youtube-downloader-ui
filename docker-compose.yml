# version: '3.9'

services:
  react-app:
    build: ./react-app
    platform: linux/amd64
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.5'
    volumes:
      - ./react-app/app/:/home/
    ports:
      - 9041:80
      - 9042:443
    networks:
      - my_shared_network
    restart: always
  fastapi:
    build: ./backend-api
    platform: linux/amd64
    container_name: fastapi
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '1.0'
    volumes:
      - ./backend-api:/home/app/
      - ./youtube-downloads:/home/videos/
      - ${FIREFOX_PROFILE_PATH}:/root/.mozilla/firefox
    ports:
      - 23002:8000
    environment:
      SECRET_KEY: ${FASTAPI_SECRET_KEY}
      PYTHONPATH: /home/app
    networks:
      - my_shared_network
    restart: always
  mongo:
    build: ./mongo/
    # platform: linux/amd64
    restart: always
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '1.0'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: fastapidb 
    ports:
      - 23003:27017
    networks:
      - my_shared_network
    command: mongod --replSet rs0 --keyFile /data/configdb/keyfile
    volumes:
      - ./mongo/mongodb_data:/data/db
    healthcheck:
      test: |
        echo "try { 
          rs.status(); 
          var cfg = rs.conf(); 
          cfg.members[0].host = 'mongo:27017'; 
          rs.reconfig(cfg, {force: true}); 
        } catch (err) { 
          rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) 
        }" | mongosh -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30

networks:
  my_shared_network:
    # driver: bridge
    external: true